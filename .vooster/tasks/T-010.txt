# 기본 유입/전환 데이터 분석 연동(GA4/Supabase Analytics)

**Task ID:** T-010
**Status:** BACKLOG
**Importance:** SHOULD
**Complexity:** 4/10
**Urgency:** 6/10
**Dependencies:** T-001

## Description

### 설명
사용자 행동과 서비스 성과를 측정하기 위해 GA4(Google Analytics 4)와 Supabase/Vercel Analytics를 연동합니다. 방문, 클릭, 예약 전환 등 핵심 지표를 추적하여 데이터 기반의 의사결정을 지원합니다.

### 구현 상세
1.  **Vercel Analytics 활성화**: Vercel 프로젝트 대시보드에서 Analytics 기능을 활성화하고, `@vercel/analytics` 패키지를 설치한 뒤 `layout.tsx`에 `<Analytics />` 컴포넌트를 추가합니다.
2.  **GA4 설정 및 연동**: Google Analytics에서 GA4 속성을 생성하고 측정 ID(`G-XXXXXXXXXX`)를 발급받습니다. 이 ID를 `NEXT_PUBLIC_GA_ID` 환경 변수로 저장하고, Next.js 프로젝트에 GA4 연동 스크립트를 추가합니다.
3.  **이벤트 트래킹**: 주요 사용자 행동(예: '예약하기' 버튼 클릭, '챗봇 시작', '예약 완료')이 발생할 때, 해당 정보를 GA4로 전송하는 이벤트 트래킹 코드를 구현합니다. `gtag('event', 'event_name', { ...params });` 형식을 사용합니다.
4.  **Supabase Analytics 활용**: Supabase 대시보드에서 제공하는 내장 분석 기능을 활용하여 API 호출 수, 쿼리 성능, 사용자 인증 통계 등 백엔드 지표를 주기적으로 모니터링합니다.

### 테스트 전략
1.  **Vercel Analytics 확인**: 배포된 사이트에 방문한 후, Vercel 대시보드의 Analytics 탭에서 실시간 방문자 데이터가 집계되는지 확인합니다.
2.  **GA4 실시간 보고서 검증**: GA4 대시보드의 '실시간' 보고서를 열어둔 상태에서 웹사이트의 여러 기능을 사용해 봅니다. 내가 발생시킨 이벤트(예: `click_reservation_button`)가 보고서에 즉시 나타나는지 확인합니다.
3.  **이벤트 파라미터 확인**: GA4의 DebugView를 사용하여 이벤트와 함께 전송되는 파라미터 값이 정확한지 검증합니다.
4.  **Supabase 대시보드 확인**: API를 여러 번 호출한 뒤, Supabase Analytics 대시보드에서 해당 API의 사용량 그래프가 증가하는지 확인합니다.

---

**Created:** 2025-07-29T04:44:49.562Z
**Updated:** 2025-07-29T04:44:49.562Z
