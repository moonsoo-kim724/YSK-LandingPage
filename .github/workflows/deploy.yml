name: Deploy to Production

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    name: Lint and Test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Build project
        run: npm run build

  deploy-supabase:
    runs-on: ubuntu-latest
    name: Deploy Supabase Changes
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy database migrations
        run: |
          supabase db push --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Verify deployment
        run: |
          echo "✅ Supabase migration deployment completed successfully"

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: lint-and-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --production

      - name: Check for vulnerabilities
        run: npx audit-ci --config audit-ci.json
        continue-on-error: true

  notify-success:
    runs-on: ubuntu-latest
    name: Notify Deployment Success
    needs: [lint-and-test, deploy-supabase]
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Notify Success
        run: |
          echo "🎉 YSK 랜딩페이지 배포 성공!"
          echo "📅 배포 시간: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "👤 배포자: ${{ github.actor }}"

  notify-failure:
    runs-on: ubuntu-latest
    name: Notify Deployment Failure
    needs: [lint-and-test, deploy-supabase]
    if: failure()

    steps:
      - name: Notify Failure
        run: |
          echo "❌ YSK 랜딩페이지 배포 실패!"
          echo "📅 실패 시간: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "👤 배포 시도자: ${{ github.actor }}"
          echo "🔧 로그를 확인하여 문제를 해결해주세요."
